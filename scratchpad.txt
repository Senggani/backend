    newMachine: async (req, res) => {
        try {
            const data = req.body

            await client.connect();
            const collection = client.db('location').collection('machine');
            const last_id = await collection.find({}, {machine_id: false, _id: true}).sort({machine_id: -1}).limit(1)
            console.log(last_id[0].machine_id+1)
            
            const doc = {
                machine_id: last_id[0].machine_id+1,
                machine_nm: data.machine_nm,
                created_by: data.created_by,
                created_dt: new Date(),
                station_id: data.station_id,
                core_equipment_id: data.core_equipment_id
            }

            const result = await collection.insertOne(doc);

            response.success(res, "success adding machine data", result);

        }
        catch (error) {
            response.failed(res, 'Error to connection')
        } finally {
            await client.close();
        }
    },

when i use this code
 let filter = { '_id': new ObjectId(data._id) };
it gives me this warning
The signature '(inputId: number): ObjectId' of 'ObjectId' is deprecated.ts(6387)
bson.d.ts(1252, 8): The declaration was marked as deprecated here.

ATLAS MONGODB EXAMPLE
const { MongoClient, ServerApiVersion } = require('mongodb');
const uri = "mongodb+srv://13220035:3QrGL6zkth7Gmm6k@pm-module.g5lfu.mongodb.net/?retryWrites=true&w=majority&appName=pm-module";
// Create a MongoClient with a MongoClientOptions object to set the Stable API version
const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  }
});
async function run() {
  try {
    // Connect the client to the server	(optional starting in v4.7)
    await client.connect();
    // Send a ping to confirm a successful connection
    await client.db("admin").command({ ping: 1 });
    console.log("Pinged your deployment. You successfully connected to MongoDB!");
  } finally {
    // Ensures that the client will close when you finish/error
    await client.close();
  }
}
run().catch(console.dir);